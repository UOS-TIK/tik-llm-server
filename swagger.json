{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local Server"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "llm-server",
    "description": "",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/init": {
      "post": {
        "tags": [
          "Interview"
        ],
        "parameters": [],
        "requestBody": {
          "description": "req body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitInterviewData"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "response type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitInterviewView"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitInterviewException"
                }
              }
            }
          }
        },
        "summary": "면접 시작 하기",
        "description": "면접 시작 하기.",
        "security": [
          {
            "secret": []
          }
        ],
        "x-nestia-namespace": "init.initInterview",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "Interview",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "secret",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "data",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "req body",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "response type",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/speak": {
      "post": {
        "tags": [
          "Interview"
        ],
        "parameters": [],
        "requestBody": {
          "description": "req body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeakToInterviewerData"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "response type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakToInterviewerView"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakToInterviewerException"
                }
              }
            }
          }
        },
        "summary": "면접관에게 대답하기",
        "description": "면접관에게 대답하기.",
        "security": [
          {
            "secret": []
          }
        ],
        "x-nestia-namespace": "speak.speakToInterviewer",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "Interview",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "secret",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "data",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "req body",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "response type",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/finish": {
      "post": {
        "tags": [
          "Interview"
        ],
        "parameters": [],
        "requestBody": {
          "description": "req body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishInterviewData"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "response type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinishInterviewView"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinishInterviewException"
                }
              }
            }
          }
        },
        "summary": "면접 결과 확인하기",
        "description": "면접 결과 확인하기.",
        "security": [
          {
            "secret": []
          }
        ],
        "x-nestia-namespace": "finish.finishInterview",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "Interview",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "secret",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "data",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "req body",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "response type",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/_/exceptions": {
      "get": {
        "tags": [
          "Common"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonException"
                }
              }
            }
          }
        },
        "summary": "공통 exception 모음",
        "description": "공통 exception 모음.(4XX, 5XX 전부 포함)",
        "x-nestia-namespace": "_.exceptions.showCommonExceptions",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "Common",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    }
  },
  "components": {
    "schemas": {
      "InitInterviewData": {
        "type": "object",
        "properties": {
          "interviewId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "techStack": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "jobDescription": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "options": {
            "$ref": "#/components/schemas/__type"
          }
        },
        "nullable": false,
        "required": [
          "interviewId",
          "techStack",
          "jobDescription",
          "options"
        ],
        "x-typia-jsDocTags": []
      },
      "__type": {
        "type": "object",
        "properties": {
          "questionCount": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "questionCount"
        ],
        "x-typia-jsDocTags": []
      },
      "InitInterviewException": {
        "type": "object",
        "properties": {
          "statusCode": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "message": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "interview is already started.",
              "invalid interviewId.",
              "interview is locked."
            ]
          }
        },
        "nullable": false,
        "required": [
          "statusCode",
          "name",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "InitInterviewView": {
        "type": "object",
        "properties": {
          "interviewId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "interviewId"
        ],
        "x-typia-jsDocTags": []
      },
      "SpeakToInterviewerData": {
        "type": "object",
        "properties": {
          "interviewId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          },
          "message": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "interviewId",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "SpeakToInterviewerException": {
        "type": "object",
        "properties": {
          "statusCode": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "message": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "invalid interviewId.",
              "interview is locked.",
              "interview is not initialized.",
              "interview is finished."
            ]
          }
        },
        "nullable": false,
        "required": [
          "statusCode",
          "name",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "SpeakToInterviewerView": {
        "type": "object",
        "properties": {
          "reply": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "isFinished": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          }
        },
        "nullable": false,
        "required": [
          "reply",
          "isFinished"
        ],
        "x-typia-jsDocTags": []
      },
      "FinishInterviewData": {
        "type": "object",
        "properties": {
          "interviewId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint32\">",
                "kind": "type",
                "value": "uint32",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 4294967295",
                "exclusive": true
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "interviewId"
        ],
        "x-typia-jsDocTags": []
      },
      "FinishInterviewException": {
        "type": "object",
        "properties": {
          "statusCode": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "message": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "invalid interviewId.",
              "interview is locked.",
              "interview is not initialized.",
              "interview is not finished."
            ]
          }
        },
        "nullable": false,
        "required": [
          "statusCode",
          "name",
          "message"
        ],
        "x-typia-jsDocTags": []
      },
      "FinishInterviewView": {
        "type": "object",
        "properties": {
          "interviewHistory": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "interviewPaper": {
            "$ref": "#/components/schemas/__type.o1"
          }
        },
        "nullable": false,
        "required": [
          "interviewHistory",
          "interviewPaper"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o1": {
        "type": "object",
        "properties": {
          "items": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/__type.o2"
            }
          },
          "finalOneLineReview": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "finalScore": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "items",
          "finalOneLineReview",
          "finalScore"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o2": {
        "type": "object",
        "properties": {
          "question": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "answer": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "evaluation": {
            "$ref": "#/components/schemas/__type.o3"
          },
          "tailQuestions": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/__type.o4"
            }
          }
        },
        "nullable": false,
        "required": [
          "question",
          "answer",
          "evaluation",
          "tailQuestions"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o3": {
        "type": "object",
        "properties": {
          "comment": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "score": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "comment",
          "score"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o4": {
        "type": "object",
        "properties": {
          "question": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "answer": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "evaluation": {
            "$ref": "#/components/schemas/__type.o5"
          }
        },
        "nullable": false,
        "required": [
          "question",
          "answer",
          "evaluation"
        ],
        "x-typia-jsDocTags": []
      },
      "__type.o5": {
        "type": "object",
        "properties": {
          "comment": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "score": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "comment",
          "score"
        ],
        "x-typia-jsDocTags": []
      },
      "CommonException": {
        "type": "object",
        "properties": {
          "statusCode": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "message": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "not authorized.",
              "invalid request data.",
              "internal server error."
            ]
          }
        },
        "nullable": false,
        "required": [
          "statusCode",
          "name",
          "message"
        ],
        "x-typia-jsDocTags": []
      }
    },
    "securitySchemes": {
      "secret": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}